apiVersion: v1
kind: Namespace
metadata:
  name: static
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: static-ingress
  namespace: static
spec:
  rules:
    - host: cv.carstens.tech
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: static-service
            servicePort: 60002
    - host: pic.carstens.tech
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: static-service
            servicePort: 60002
    - host: trash.carstens.tech
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: static-service
            servicePort: 60002
    - host: carstens.tech
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            serviceName: static-service
            servicePort: 60002
---
apiVersion: v1
kind: Service
metadata:
  name: static-service
  namespace: static
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
spec:
  type: NodePort
  selector:
    app: static-files
  ports:
    - name: http
      protocol: TCP
      port: 60002
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: static-files
  namespace: static
spec:
  replicas: 2
  selector:
    matchLabels:
      app: static-files
  template:
    metadata:
      labels:
        app: static-files
    spec:
      containers:
      - name: static-files
        image: nginx:1.19.6-alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /var/log/nginx
          name: log
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: log
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: static
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    events {
      worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';

      error_log   /var/log/nginx/error.log;
      access_log	/var/log/nginx/access.log main;

      server {
        listen       80;
        server_name  carstens.tech;
        access_log   /var/log/nginx/access_log main;
        error_log    /var/log/nginx/error_log;
        
        location ~ / {
          if ($http_user_agent ~* "^GoogleHC/1.0$") {
            return 200 "Ok!";
          }

          return 301 https://google.com;
        }
      }

      server {
        listen       80;
        server_name  pic.carstens.tech;
        access_log   /var/log/nginx/pic.access_log main;
        error_log    /var/log/nginx/pic.error_log;
        
        location ~ / {
          return 301 https://storage.googleapis.com/k8s-static-files/me.jpg;
        }
      }

      server {
        listen       80;
        server_name  trash.carstens.tech;
        access_log   /var/log/nginx/trash.access_log main;
        error_log    /var/log/nginx/trash.error_log;
        
        location ~ / {
          return 301 https://storage.googleapis.com/k8s-static-files/trash.pdf;
        }
      }

      server {
        listen       80;
        server_name  cv.carstens.tech;
        access_log   /var/log/nginx/cv.access_log main;
        error_log    /var/log/nginx/cv.error_log;
        
        location ~ / {
          return 301 https://storage.googleapis.com/k8s-static-files/cv.pdf;
        }
      }
    }
